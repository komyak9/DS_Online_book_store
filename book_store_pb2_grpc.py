# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import book_store_pb2 as book__store__pb2


class DataStoreStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Get = channel.unary_unary(
                '/DataStore/Get',
                request_serializer=book__store__pb2.KeyValue.SerializeToString,
                response_deserializer=book__store__pb2.KeyValue.FromString,
                )
        self.Put = channel.unary_unary(
                '/DataStore/Put',
                request_serializer=book__store__pb2.KeyValue.SerializeToString,
                response_deserializer=book__store__pb2.KeyValue.FromString,
                )


class DataStoreServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Put(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataStoreServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=book__store__pb2.KeyValue.FromString,
                    response_serializer=book__store__pb2.KeyValue.SerializeToString,
            ),
            'Put': grpc.unary_unary_rpc_method_handler(
                    servicer.Put,
                    request_deserializer=book__store__pb2.KeyValue.FromString,
                    response_serializer=book__store__pb2.KeyValue.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'DataStore', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataStore(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataStore/Get',
            book__store__pb2.KeyValue.SerializeToString,
            book__store__pb2.KeyValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataStore/Put',
            book__store__pb2.KeyValue.SerializeToString,
            book__store__pb2.KeyValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ReplicationChainStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ForwardPut = channel.unary_unary(
                '/ReplicationChain/ForwardPut',
                request_serializer=book__store__pb2.KeyValue.SerializeToString,
                response_deserializer=book__store__pb2.KeyValue.FromString,
                )
        self.ForwardGet = channel.unary_unary(
                '/ReplicationChain/ForwardGet',
                request_serializer=book__store__pb2.KeyValue.SerializeToString,
                response_deserializer=book__store__pb2.KeyValue.FromString,
                )


class ReplicationChainServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ForwardPut(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForwardGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ReplicationChainServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ForwardPut': grpc.unary_unary_rpc_method_handler(
                    servicer.ForwardPut,
                    request_deserializer=book__store__pb2.KeyValue.FromString,
                    response_serializer=book__store__pb2.KeyValue.SerializeToString,
            ),
            'ForwardGet': grpc.unary_unary_rpc_method_handler(
                    servicer.ForwardGet,
                    request_deserializer=book__store__pb2.KeyValue.FromString,
                    response_serializer=book__store__pb2.KeyValue.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ReplicationChain', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ReplicationChain(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ForwardPut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ReplicationChain/ForwardPut',
            book__store__pb2.KeyValue.SerializeToString,
            book__store__pb2.KeyValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ForwardGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ReplicationChain/ForwardGet',
            book__store__pb2.KeyValue.SerializeToString,
            book__store__pb2.KeyValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
