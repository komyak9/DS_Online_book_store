# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import book_store_pb2 as book__store__pb2


class BookStoreStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateLocalStores = channel.unary_unary(
                '/BookStore/CreateLocalStores',
                request_serializer=book__store__pb2.CreateLocalStoresRequest.SerializeToString,
                response_deserializer=book__store__pb2.CreateLocalStoresResponse.FromString,
                )
        self.CreateChain = channel.unary_unary(
                '/BookStore/CreateChain',
                request_serializer=book__store__pb2.CreateChainRequest.SerializeToString,
                response_deserializer=book__store__pb2.CreateChainResponse.FromString,
                )
        self.CheckChain = channel.unary_unary(
                '/BookStore/CheckChain',
                request_serializer=book__store__pb2.CheckChainRequest.SerializeToString,
                response_deserializer=book__store__pb2.CheckChainResponse.FromString,
                )
        self.ListChain = channel.unary_unary(
                '/BookStore/ListChain',
                request_serializer=book__store__pb2.ListChainRequest.SerializeToString,
                response_deserializer=book__store__pb2.ListChainResponse.FromString,
                )
        self.RemoveHead = channel.unary_unary(
                '/BookStore/RemoveHead',
                request_serializer=book__store__pb2.RemoveHeadRequest.SerializeToString,
                response_deserializer=book__store__pb2.RemoveHeadResponse.FromString,
                )


class BookStoreServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateLocalStores(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateChain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckChain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListChain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveHead(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BookStoreServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateLocalStores': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateLocalStores,
                    request_deserializer=book__store__pb2.CreateLocalStoresRequest.FromString,
                    response_serializer=book__store__pb2.CreateLocalStoresResponse.SerializeToString,
            ),
            'CreateChain': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateChain,
                    request_deserializer=book__store__pb2.CreateChainRequest.FromString,
                    response_serializer=book__store__pb2.CreateChainResponse.SerializeToString,
            ),
            'CheckChain': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckChain,
                    request_deserializer=book__store__pb2.CheckChainRequest.FromString,
                    response_serializer=book__store__pb2.CheckChainResponse.SerializeToString,
            ),
            'ListChain': grpc.unary_unary_rpc_method_handler(
                    servicer.ListChain,
                    request_deserializer=book__store__pb2.ListChainRequest.FromString,
                    response_serializer=book__store__pb2.ListChainResponse.SerializeToString,
            ),
            'RemoveHead': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveHead,
                    request_deserializer=book__store__pb2.RemoveHeadRequest.FromString,
                    response_serializer=book__store__pb2.RemoveHeadResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'BookStore', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BookStore(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateLocalStores(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BookStore/CreateLocalStores',
            book__store__pb2.CreateLocalStoresRequest.SerializeToString,
            book__store__pb2.CreateLocalStoresResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateChain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BookStore/CreateChain',
            book__store__pb2.CreateChainRequest.SerializeToString,
            book__store__pb2.CreateChainResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckChain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BookStore/CheckChain',
            book__store__pb2.CheckChainRequest.SerializeToString,
            book__store__pb2.CheckChainResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListChain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BookStore/ListChain',
            book__store__pb2.ListChainRequest.SerializeToString,
            book__store__pb2.ListChainResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveHead(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/BookStore/RemoveHead',
            book__store__pb2.RemoveHeadRequest.SerializeToString,
            book__store__pb2.RemoveHeadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class DataStorageStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ReadFromDataStore = channel.unary_unary(
                '/DataStorage/ReadFromDataStore',
                request_serializer=book__store__pb2.ReadFromDataStoreRequest.SerializeToString,
                response_deserializer=book__store__pb2.ReadFromDataStoreResponse.FromString,
                )
        self.WriteToDataStore = channel.unary_unary(
                '/DataStorage/WriteToDataStore',
                request_serializer=book__store__pb2.WriteToDataStoreRequest.SerializeToString,
                response_deserializer=book__store__pb2.WriteToDataStoreResponse.FromString,
                )
        self.CommonWriteOperation = channel.unary_unary(
                '/DataStorage/CommonWriteOperation',
                request_serializer=book__store__pb2.CommonWriteOperationRequest.SerializeToString,
                response_deserializer=book__store__pb2.CommonWriteOperationResponse.FromString,
                )
        self.ListBooks = channel.unary_unary(
                '/DataStorage/ListBooks',
                request_serializer=book__store__pb2.ListBooksRequest.SerializeToString,
                response_deserializer=book__store__pb2.ListBooksResponse.FromString,
                )


class DataStorageServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ReadFromDataStore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteToDataStore(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommonWriteOperation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBooks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataStorageServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ReadFromDataStore': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadFromDataStore,
                    request_deserializer=book__store__pb2.ReadFromDataStoreRequest.FromString,
                    response_serializer=book__store__pb2.ReadFromDataStoreResponse.SerializeToString,
            ),
            'WriteToDataStore': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteToDataStore,
                    request_deserializer=book__store__pb2.WriteToDataStoreRequest.FromString,
                    response_serializer=book__store__pb2.WriteToDataStoreResponse.SerializeToString,
            ),
            'CommonWriteOperation': grpc.unary_unary_rpc_method_handler(
                    servicer.CommonWriteOperation,
                    request_deserializer=book__store__pb2.CommonWriteOperationRequest.FromString,
                    response_serializer=book__store__pb2.CommonWriteOperationResponse.SerializeToString,
            ),
            'ListBooks': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBooks,
                    request_deserializer=book__store__pb2.ListBooksRequest.FromString,
                    response_serializer=book__store__pb2.ListBooksResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'DataStorage', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataStorage(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ReadFromDataStore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataStorage/ReadFromDataStore',
            book__store__pb2.ReadFromDataStoreRequest.SerializeToString,
            book__store__pb2.ReadFromDataStoreResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteToDataStore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataStorage/WriteToDataStore',
            book__store__pb2.WriteToDataStoreRequest.SerializeToString,
            book__store__pb2.WriteToDataStoreResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CommonWriteOperation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataStorage/CommonWriteOperation',
            book__store__pb2.CommonWriteOperationRequest.SerializeToString,
            book__store__pb2.CommonWriteOperationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListBooks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataStorage/ListBooks',
            book__store__pb2.ListBooksRequest.SerializeToString,
            book__store__pb2.ListBooksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
